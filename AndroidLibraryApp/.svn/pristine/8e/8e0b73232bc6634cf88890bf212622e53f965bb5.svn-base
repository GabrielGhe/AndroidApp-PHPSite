package cs534.team3.phase1;

import java.util.ArrayList;

import cs534.team3.phase1.R;
import cs534.team3.phase1.database.AsyncDBHelper;
import cs534.team3.phase1.database.DBHelper;

import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;

/**
 * Project Phase 1 : CS Studio
 * 
 * @author Caroline Castonguay-Boisvert 0834048
 * @author Gabriel Gheorghian 0737019
 * @author Natacha Gabbamonte 0932340
 * 
 *         Project CS534.team3.phase1
 * 
 */
public class Main extends Activity {
	public static final String TAG = "CGStudio";
	public static final String DEBUG_TAG = "CGStudio Debug";

	private static AsyncDBHelper asyncDBHelper = null;
	private ListView listView = null;
	private ArrayList<Product> allProducts = null;
	private ArrayList<String> displayText = null;

	/**
	 * 
	 */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);
		asyncDBHelper = new AsyncDBHelper(this, TAG);
		listView = (ListView) findViewById(R.id.main_listView);
		addItemsToListView();
	}

	private void addItemsToListView() {
		Product product = null;
		allProducts = new ArrayList<Product>();
		displayText = new ArrayList<String>();

		Cursor cursor = asyncDBHelper.getAllProducts();
		if (cursor == null) {
			Log.i(DEBUG_TAG, "[Main] Cursor is null");
		} else {
			while (cursor.moveToNext()) {
				Log.i(DEBUG_TAG, "[Main] Cursor new record column count: "
						+ cursor.getColumnCount());
				product = new Product(cursor.getInt(cursor
						.getColumnIndex(DBHelper.COLUMN_ID)),
						cursor.getInt(cursor
								.getColumnIndex(DBHelper.COLUMN_QUANTITY)),
						cursor.getString(cursor
								.getColumnIndex(DBHelper.COLUMN_PLATFORM)),
						cursor.getString(cursor
								.getColumnIndex(DBHelper.COLUMN_GENRE)),
						cursor.getString(cursor
								.getColumnIndex(DBHelper.COLUMN_NAME)),
						cursor.getString(cursor
								.getColumnIndex(DBHelper.COLUMN_IMAGE_URL)),
						cursor.getString(cursor
								.getColumnIndex(DBHelper.COLUMN_DESCRIPTION)),
						cursor.getDouble(cursor
								.getColumnIndex(DBHelper.COLUMN_PRICE)),
						cursor.getInt(cursor
								.getColumnIndex(DBHelper.COLUMN_TAXABLE)) != 0,
						cursor.getString(cursor
								.getColumnIndex(DBHelper.COLUMN_CREATED)),
						cursor.getString(cursor
								.getColumnIndex(DBHelper.COLUMN_MODIFIED)), 0);
				String text = "Name: " + product.getName() + " Quantity: "
						+ product.getQuantity() + " Platform: "
						+ product.getPlatform() + " Genre: "
						+ product.getGenre();
				allProducts.add(product);
				displayText.add(text);
			}
			if (displayText.isEmpty())
				displayText.add("No items found, populate your list.");
			Log.i(DEBUG_TAG, "[Main] End cursor.");
		}
		listView.setAdapter(new ArrayAdapter<String>(this,
				R.layout.centered_textview, displayText));
	}

	/**
	 * Returns the Asynchronous Database Helper.
	 * 
	 * @return The AsyncDBHelper Object.
	 */
	public static AsyncDBHelper getAsyncDBHelper() {
		return asyncDBHelper;
	}

	/**
	 * OnClickListener for the Cost Preview button.
	 * 
	 * @param v
	 *            the button
	 */
	public void startCostPreview(View v) {
		startActivity(new Intent(this, CostPreview.class));
	}

	/**
	 * OnClickListener for the Add Item button.
	 * 
	 * @param v
	 *            the button
	 */
	public void startAddItem(View v) {
		startActivity(new Intent(this, AddItem.class));
	}

	/**
	 * OnClickListener for the Set Preferences button.
	 * 
	 * @param v
	 *            the button
	 */
	public void startSetPrefs(View v) {
		startActivity(new Intent(this, SetPrefs.class));
	}

	// @Override
	// public boolean onCreateOptionsMenu(Menu menu) {
	// getMenuInflater().inflate(R.menu.activity_splash, menu);
	// return true;
	// }

}